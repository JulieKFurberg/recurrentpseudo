% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pseudo.surv_mu_est.R
\name{pseudo.surv_mu_est}
\alias{pseudo.surv_mu_est}
\title{Help function parsed inside pseudo.onedim() and pseudo.twodim()}
\usage{
pseudo.surv_mu_est(inputdata, tstart, tstop, status, id)
}
\arguments{
\item{inputdata}{Data set which contains variables of interest}

\item{tstart}{Start time - expecting counting process notation}

\item{tstop}{Stop time - expecting counting process notation}

\item{status}{Status variable (0 = censoring, 1 = recurrent event, 2 = death)}

\item{id}{ID variable for subject}
}
\description{
Help function parsed inside pseudo.onedim() and pseudo.twodim()
}
\examples{
# Example: Bladder cancer data from survival package
require(survival)

# Make a three level status variable
bladder1$status3 <- ifelse(bladder1$status \%in\% c(2, 3), 2, bladder1$status)
bladder1$status <- bladder1$status3

# Add one extra day for the two patients with start=stop=0
# subset(bladder1, stop <= start)
bladder1[bladder1$id == 1, "stop"] <- 1
bladder1[bladder1$id == 49, "stop"] <- 1

# Restrict the data to placebo and thiotepa
bladdersub <- subset(bladder1, treatment \%in\% c("placebo", "thiotepa"))

# Make treatment variable two-level factor
bladdersub$Z <- as.factor(ifelse(bladdersub$treatment == "placebo", 0, 1))
levels(bladdersub$Z) <- c("placebo", "thiotepa")
head(bladdersub)


# Estimate mu and surv on data
pseudo.surv_mu_est(inputdata = bladdersub,
                   tstart = bladdersub$start,
                   tstop = bladdersub$stop,
                   status = bladdersub$status,
                   id = bladdersub$id)
}
\keyword{recurrentpseudo}
